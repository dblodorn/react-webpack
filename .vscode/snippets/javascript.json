{
  /*
    // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    "Print to console": {
      "prefix": "log",
      "body": [
        "console.log('$1');",
        "$2"
      ],
      "description": "Log output to console"
    }
  */
    "React Class Component": {
      "prefix": "rw_react_class_component",
      "body": [
        "import React, { Component } from 'react'",
        "class ${1:ComponentName} extends Component {",
        "  render() {",
        "    return (",
        "$0",
        "    )",
        "  }",
        "}",
        "export default ${1:ComponentName};"
      ],
      "description": "Create Generic Class"
    },
    "React Functional Component": {
      "prefix": "rw_react_functional_component",
      "body": [
        "import React from 'react'",
        "const ${1:ComponentName} = () => {",
        "  return (",
        "$0",
        "  )",
        "}",
        "export default ${1:ComponentName};"
      ],
      "description": "Create Functional Component"
    },
    "React Constructor": {
      "prefix": "rw_react_constructor",
      "body": [
        "constructor(props) {",
        "  super(props);",
        "  this.state = {};",
        "};"
      ],
      "description": "Create a Class Component Constructor"
    },
    "React Map": {
      "prefix": "rw_react_map",
      "body": [
        "const MapItems = $0.map((item, i) =>",
        "  <div key={'id' + i}/>",
        ")"
      ],
      "description": "Create React Map Interator"
    },
    "React Component Will Mount": {
      "prefix": "rw_react_component_will_mount",
      "body": [
        "componentWillMount() {",
        "  $0",
        "}"
      ],
      "description": "React Component Will Mount"
    },
    "React Component Did Mount": {
      "prefix": "rw_react_component_did_mount",
      "body": [
        "componentDidMount() {",
        "  $0",
        "}"
      ],
      "description": "React Component Did Mount"
    },
    "React MouseMove": {
      "prefix": "rw_react_on_mouse_move",
      "body": [
        "onDocumentMouseMove(event) {",
        "  $0",
        "}"
      ],
      "description": "React MouseMove Listener"
    },
    "React TouchStart": {
      "prefix": "rw_react_on_touch_start",
      "body": [
        "onDocumentTouchStart(event) {",
        "  $0",
        "}"
      ],
      "description": "React TouchStart Listener"
    },
    "React TouchMove": {
      "prefix": "rw_react_on_touch_move",
      "body": [
        "onDocumentTouchMove(event) {",
        "  $0",
        "}"
      ],
      "description": "React TouchMove Listener"
    }
  }
